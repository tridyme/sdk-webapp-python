{"version":3,"file":"static/js/72.7aeccd24.chunk.js","mappings":"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","sources":["../node_modules/regression/dist/regression.js"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n\n    return 1 - sse / ssyy;\n  }\n\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n\n        var c = [];\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n          c.push(b);\n          b = 0;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      var string = 'y = ';\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});\n"],"names":["define","module","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","DEFAULT_OPTIONS","order","precision","period","determinationCoefficient","data","results","predictions","observations","forEach","d","push","mean","reduce","a","observation","ssyy","difference","accum","index","prediction","residual","gaussianElimination","input","matrix","n","coefficients","maxrow","j","Math","abs","k","tmp","_j","_k","_j2","total","_k2","round","number","factor","pow","methods","linear","options","sum","len","run","rise","gradient","intercept","predict","x","points","map","point","equation","r2","string","exponential","log","denominator","exp","b","coeffA","coeffB","logarithmic","power","polynomial","lhs","rhs","l","c","_l","v","coeff","_i","concat","reverse","createWrapper","accumulator","name","_round","supplied","keys","exports"],"sourceRoot":""}